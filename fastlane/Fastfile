fastlane_version "1.97.0"

default_platform :ios

platform :ios do

  before_all do
    xcversion(version: '~> 8.0.0')
    cocoapods(silent: true, repo_update: true)
  end
  
  after_all do
    cleanup
  end
  
  desc "Runs all the tests."
  lane :runTests do
    scan(
      configuration: "Debug",
      output_types: "junit",
      device: "iPhone 6s (10.0)",
    )
  end
  
  desc "Build the archive and ipa with options (configuration (Release), include_bitcode (false), export_method (enterprise))."
  lane :build do |options|
    options[:configuration] ||= "Release"
    options[:include_bitcode] ||= false
    options[:export_method] ||= "enterprise"
    
    gym(
      configuration: options[:configuration],
      include_bitcode: options[:include_bitcode],
      export_method: options[:export_method]
    )
  end
  
  desc "Upload a local IPA to Crashlytics with (group (car-net-ios-qa))."
  lane :uploadToCrashlytics do |options|
    options[:group] ||= "car-net-ios-qa"
    
    crashlytics(
      crashlytics_path: './Pods/Crashlytics/',
      groups: options[:group],
      notifications: 'true'
    )
  end
  
  desc "Build and upload to Crashlytics with (configuration (Release)), (include_bitcode (false)), (export_method (enterprise)), and (group (eco-ios-internal))."
  lane :beta do |options|
    options[:configuration] ||= "Release"
    options[:include_bitcode] ||= false
    options[:export_method] ||= "enterprise"
    options[:group] ||= "car-net-ios-qa"
    
    installProfiles
    
    build(configuration: options[:configuration], include_bitcode: options[:include_bitcode], export_method: options[:export_method])
    
    uploadToCrashlytics(group: options[:group])
    
    cleanupArchive
  end
  
  desc "Deletes the archive generated by gym."
  lane :cleanupArchive do
    sh "rm -r \"#{lane_context[SharedValues::XCODEBUILD_ARCHIVE]}\""
  end
  
  # Custom actions
  
  desc "Builds and uploads to Crashlytics a QA build."
  lane :betaQA do
    increment_build_number
    
    beta
    
    commit_version_bump(message: "Automatically bumping build number to #{lane_context[SharedValues::BUILD_NUMBER]}.")
    push_to_git_remote
  end
  
  desc "Cleanup simulator"
  lane :cleanup do
    # kill simulator
    sh "killall Simulator || :"
    # kill SimulatorService
    sh "killall -9 com.apple.CoreSimulator.CoreSimulatorService || :"
  end
  
end

desc "Installs any provisioning profiles in $PROFILE_DIRECTORY, relative to fastlane's execution path."
lane :installProfiles do
  Dir.glob("#{ENV["PROFILE_DIRECTORY"]}/*.mobileprovision") do |profile|
    FastlaneCore::ProvisioningProfile.install(profile)
  end
end
